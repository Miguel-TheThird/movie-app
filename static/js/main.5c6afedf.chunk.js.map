{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/like.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","components/movies.jsx","App.js","reportWebVitals.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Like","classes","this","props","onClick","className","icon","faHeart","React","Component","Pagination","console","log","currentPage","itemsCount","pageSize","pagesCount","Math","ceil","pages","_","range","map","page","onPageChange","ListGroup","items","item","onItemSelect","selectedItem","defaultProps","textProperty","valueProperty","Movies","state","handleDelete","movie","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","selectedGenre","g","count","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c6afedf.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart} from '@fortawesome/free-solid-svg-icons'\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\n\r\n\r\nclass Like extends React.Component {\r\n    \r\n    render() { \r\n        let classes = \"icon-unliked\"\r\n\r\n        if(this.props.liked){\r\n            classes = \"icon-liked\"\r\n        }\r\n\r\n        return (        \r\n            <FontAwesomeIcon onClick={this.props.onClick} className={classes}  icon={faHeart}/>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Like;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash' //Lodash is an optimized version of a library called underscore\r\n\r\nconst Pagination = props => {\r\n    console.log(\"Receiving current Page\" ,props.currentPage); \r\n    const itemsCount = props.itemsCount\r\n    const pageSize = props.pageSize\r\n    //const {itemsCount, pageSize} = props;\r\n    console.log(\"itemsCount\", itemsCount)\r\n    console.log(\"pageSize\",pageSize)\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    //pagesCount can be 1 or 2 or whatever, based on that we need to create an array with numbers ranginf from \r\n    //[1 ... all the way to pagesCount ].map() we do this using lodash to generate an array with this numbers.  \r\n    console.log(\"This is it\" , pagesCount)\r\n    if(pagesCount === 1) return null;\r\n    const pages = _.range(1, pagesCount + 1) //Have to add 1 here because this method will not include this end number itself(the last page/number in a array)\r\n    //then map the items in this array to list items.\r\n    return ( \r\n        <nav >\r\n  <ul className=\"pagination\">\r\n      {pages.map(page => (\r\n      <li key={page}  className={ page === props.currentPage ? \"page-item active\" : \"page-item\"}>\r\n          <a className=\"page-link\"  onClick={() => props.onPageChange(page)} >{page} </a>\r\n        </li>\r\n    ))}\r\n    </ul>\r\n</nav>\r\n     );\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n}\r\n \r\nexport default Pagination;","import React from 'react';\r\n\r\n//Use bracket notation to access properties dynamically\r\n\r\nconst ListGroup = (props) => {\r\n    return(\r\n        <ul className=\"list-group\">\r\n            {props.items.map(item =>( \r\n            <li key={item._id}\r\n            onClick={() => props.onItemSelect(item)} \r\n             \r\n            className={item === props.selectedItem ? \"list-group-item active\" : \"list-group-item\"}\r\n            \r\n            >\r\n            {item.name}\r\n            </li>))}            \r\n        </ul>\r\n    );    \r\n};\r\n\r\nListGroup.defaultProps = {\r\n    textProperty: \"name\",\r\n    valueProperty: \"_id\"\r\n};\r\n\r\n \r\nexport default ListGroup;","import React from 'react';\r\nimport { getMovies } from '../services/fakeMovieService'\r\nimport Like from './common/like';\r\nimport Pagination from './common/pagination';\r\nimport {paginate} from '../utils/paginate';\r\nimport ListGroup from './common/listGroup';\r\nimport { getGenres } from '../services/fakeGenreService'\r\n\r\n\r\n\r\nclass Movies extends React.Component {\r\n    state = {\r\n        movies: [], //It's good to initialize them with an empty array because you want everything else to be rendered before calling an API or in thi case the fake services\r\n        genres: [],\r\n        pageSize: 4,\r\n        currentPage: 1\r\n    }\r\n\r\n    componentDidMount(){\r\n        const genres = [{ name: \"All Genres\" }, ...getGenres() ]//Just adding \"All Genres\" option to the list\r\n      this.setState({ movies: getMovies(), genres: genres })  \r\n    }\r\n\r\n    handleDelete = movie => { //this movie parameter comes from the map. So when click, we pass a movie  with all its properties to this function\r\n       const movies = this.state.movies.filter(m => m._id !== movie._id); \r\n       //Creating a new movie list exept (!==) the one with the _id we get passed\r\n       this.setState({movies: movies }); //This will overwrite the state above with the new list with out one\r\n    }\r\n\r\n    handleLike = (movie) =>{\r\n        const movies = [...this.state.movies]; //Clone the movies state\r\n        const index = movies.indexOf(movie); //Find the index of clicked object(movie)\r\n\r\n        //console.log(movies) // (9) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\r\n        //console.log(index) // Just a number\r\n\r\n        movies[index] = {...movies[index]}; //Clone ALL the properties not just the index \r\n\r\n        //console.log(movies[index]); // We get the whole object {_id: '5b21ca3eeb7f6fbccd471815', title: 'Terminator', genre: {…}, numberInStock: 6, dailyRentalRate: 2.5, …}\r\n        \r\n        movies[index].liked = !movies[index].liked; //just change or toggle the liked property(if it's true it become false otherwise if it is false it become true)\r\n        \r\n        \r\n\r\n        this.setState({ movies : movies}) //Finally pass the new movies array to state\r\n\r\n    }\r\n\r\n    handlePageChange = page => {\r\n        console.log(\"This is the current page\" , page);\r\n        this.setState({currentPage : page})\r\n    };\r\n\r\n    handleGenreSelect = genre => {\r\n        console.log(\" The genre is: \" , genre)\r\n        this.setState({ selectedGenre: genre });\r\n    }\r\n\r\n    render() { \r\n        //OBJECT DESTRUCTURING\r\n        const { length: count } = this.state.movies //this.state.movies.length passed to constant length, and at the same time renaming lenght to count \r\n        if(count === 0){\r\n            return(<p>There are no movies in the database</p>)\r\n        }\r\n        //else is implied here so it will rend the list is length us bigger than zero\r\n\r\n        //Filter before pagination\r\n        /* const  filtered = this.state.selectedGenre && this.state.selectedGenre._id ? this.state.movies.filter(m => m.genre._id === this.state.selectedGenre._id)\r\n        : this.state.movies */\r\n\r\n        //const newMoviesPaginated = paginate(this.state.movies, this.state.currentPage, this.state.pageSize)\r\n        \r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <ListGroup \r\n                    items={this.state.genres} \r\n                    selectedItem={this.state.selectedGenre}\r\n                    onItemSelect={this.handleGenreSelect}                 \r\n                    //valueProperty=\"_id\" /* This is to make the component more flexible in case the input have a different name, so now this 2 properties will determine the name of the target property */\r\n                   // textProperty=\"name\" /* same as above //DELETED BECAUSE I'M USING DEFAULT PROPS IN THE COMPONENT */\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col\"> {/* Right colum */}\r\n                <p>Showing {count} movies in the database.</p>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Title</th>\r\n                        <th>Genre</th>\r\n                        <th>Stock</th>\r\n                        <th>Rate</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.movies.map(movie => ( //{this.state.movies.map(movie =>... First solution\r\n                        <tr key={movie._id}>\r\n                        <td>{movie.title}</td>\r\n                        <td>{movie.genre.name}</td>\r\n                        <td>{movie.numberInStock}</td>\r\n                        <td>{movie.dailyRentalRate}</td>\r\n                        <td><Like liked={movie.liked} onClick={() => this.handleLike(movie)}/></td>\r\n                        <td><button onClick={() => this.handleDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button></td>\r\n                    </tr>\r\n                    ))}\r\n                    \r\n                </tbody>\r\n            </table>\r\n            <Pagination \r\n            itemsCount={count} \r\n            pageSize={this.state.pageSize} \r\n            onPageChange={this.handlePageChange}\r\n            currentPage={this.state.currentPage} />\r\n\r\n                </div>            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Movies;","import './App.css';\nimport Movies from './components/movies';\n\nfunction App() {\n  return (\n    <main className=\"container\">\n      <Movies/>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}